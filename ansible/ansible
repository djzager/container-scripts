#!/usr/bin/env bash
set -eo pipefail

SCRIPT="$(readlink -f "${BASH_SOURCE[0]}")"
DIR="$(dirname ${SCRIPT})"
# TODO: Maybe this should be called ansible-playbook
__ANSIBLE__="${TAG:-$USER/ansible}"

install_ansible() {
	local ctr=$1

	buildah run $ctr -- dnf install -y python
	buildah run $ctr -- dnf clean all
	buildah run $ctr -- pip install ansible${ANSIBLE_VERSION:+==$ANSIBLE_VERSION} openshift jmespath
	buildah copy $ctr "${DIR}/ansible.cfg" /etc/ansible/ansible.cfg
}

build_ansible() {
	set -x
	local ctr=$1
	local tag=${2:-$__ANSIBLE__}
	source "${DIR}/../fedora/fedora"

	container_from_fedora $ctr
	install_ansible $ctr
	buildah config --entrypoint '[ "/usr/bin/ansible-playbook" ]' \
		       --workingdir "/opt/ansible/" $ctr
	buildah commit $ctr $tag
}

run_ansible() {
	KUBECONFIG=${KUBECONFIG:-$HOME/.kube/config}

	# TODO: Fix this
	podman run -it --rm \
		--privileged \
		--net=host \
		--volume $PWD:$PWD \
		--workdir $PWD \
		${__ANSIBLE__} -- "$@"
}

# If run as script
if ! $(return >/dev/null 2>&1); then
	case "$1" in
		build)
			ctr="ansible-working-container"
			buildah rm $ctr >/dev/null 2>&1 || true
			build_ansible $ctr $__ANSIBLE__
			buildah rm $ctr >/dev/null 2>&1
			;;

		*)
			if ! buildah images ${__ANSIBLE__} >/dev/null 2>&1; then
				echo "Ansible image does not exist, building..."
				$SCRIPT build
			fi
			run_ansible "$@"
			;;

	esac
fi
