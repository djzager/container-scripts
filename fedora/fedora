#!/usr/bin/env bash
set -eo pipefail

SCRIPT="$(readlink -f "${BASH_SOURCE[0]}")"
__FEDORA__="${USER}/fedora"
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"

install_zsh() {
	local ctr=$1
	buildah run $ctr -- dnf install -y zsh git fzf ripgrep tmux
	buildah copy $ctr $XDG_CONFIG_HOME/zsh /root/.config/zsh
	buildah config \
		--cmd "" \
		--entrypoint '[ "/usr/bin/zsh" ]' \
		--env ZDOTDIR="/root/.config/zsh" \
		--env FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob !.git 2> /dev/null' \
		--label maintainer="David Zager <david.j.zager@gmail.com>" \
		$ctr
}

build_fedora() {
	set -x
	local ctr=$1
	local tag="${2:-${__FEDORA__}}"

	buildah from --name $ctr --pull-always fedora
	buildah run $ctr -- dnf update -y
	install_zsh $ctr
	buildah commit $ctr $tag
}

container_from_fedora() {
	local ctr=$1
	local tag="${2:-${__FEDORA__}}"

	if buildah images $tag >/dev/null 2>&1; then
		buildah from --name $ctr $tag
	else
		build_fedora $ctr
	fi
}

run_fedora() {
	local exec="$(basename "${BASH_SOURCE[0]}")"
	local args=(
		-it
		--rm
		--hostname toolbox
		--privileged
		--net host
		--volume ${PWD}:${PWD}:rslave
		--workdir $PWD
	)

	KUBECONFIG=${KUBECONFIG:-$HOME/.kube/config}
	if [ -f "$KUBECONFIG" ]; then
		args+=( --env $KUBECONFIG --volume $KUBECONFIG:/root/.kube/config )
	fi

	podman run "${args[@]}" ${__FEDORA__} "$@"
}

# If run as script
if ! $(return >/dev/null 2>&1); then
	case "$1" in
		build)
			ctr="fedora-working-container"
			buildah rm $ctr >/dev/null 2>&1 || true
			build_fedora $ctr ${__FEDORA__}
			buildah rm $ctr >/dev/null 2>&1
			;;

		*)
			if ! buildah images ${__FEDORA__} >/dev/null 2>&1; then
				echo "Fedora image does not exist, building..."
				$SCRIPT build
			fi
			run_fedora "$@"
			;;

	esac
fi
